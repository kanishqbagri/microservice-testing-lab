apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.order_service.name }}
  labels:
    app: {{ .Values.order_service.name }}
    {{- with .Values.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.order_service.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.order_service.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.order_service.name }}
        {{- with .Values.labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      # User Service Container
      - name: {{ .Values.order_service.name }}
        image: "{{ .Values.order_service.image.repository }}:{{ .Values.order_service.image.tag }}"
        imagePullPolicy: {{ .Values.order_service.image.pullPolicy }}
        ports:
        - name: http
          containerPort: {{ .Values.order_service.port }}
          protocol: TCP
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: {{ .Values.order_service.env.SPRING_PROFILES_ACTIVE | quote }}
        - name: SERVER_PORT
          value: {{ .Values.order_service.env.SERVER_PORT | quote }}
        - name: SPRING_DATASOURCE_URL
          value: {{ .Values.order_service.env.SPRING_DATASOURCE_URL | quote }}
        - name: SPRING_DATASOURCE_USERNAME
          value: {{ .Values.order_service.env.SPRING_DATASOURCE_USERNAME | quote }}
        - name: SPRING_DATASOURCE_PASSWORD
          value: {{ .Values.order_service.env.SPRING_DATASOURCE_PASSWORD | quote }}
        {{- with .Values.order_service.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.securityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- if .Values.order_service.healthCheck.enabled }}
        livenessProbe:
          {{- with .Values.order_service.healthCheck.livenessProbe }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          initialDelaySeconds: {{ .Values.order_service.healthCheck.initialDelaySeconds }}
          periodSeconds: {{ .Values.order_service.healthCheck.periodSeconds }}
          timeoutSeconds: {{ .Values.order_service.healthCheck.timeoutSeconds }}
          failureThreshold: {{ .Values.order_service.healthCheck.failureThreshold }}
        readinessProbe:
          {{- with .Values.order_service.healthCheck.readinessProbe }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          initialDelaySeconds: {{ .Values.order_service.healthCheck.initialDelaySeconds }}
          periodSeconds: {{ .Values.order_service.healthCheck.periodSeconds }}
          timeoutSeconds: {{ .Values.order_service.healthCheck.timeoutSeconds }}
          failureThreshold: {{ .Values.order_service.healthCheck.failureThreshold }}
        {{- end }}

      # PostgreSQL Sidecar Container
      - name: {{ .Values.postgresSidecar.name }}
        image: "{{ .Values.postgresSidecar.image.repository }}:{{ .Values.postgresSidecar.image.tag }}"
        imagePullPolicy: {{ .Values.postgresSidecar.image.pullPolicy }}
        ports:
        - name: postgres
          containerPort: {{ .Values.postgresSidecar.port }}
          protocol: TCP
        env:
        - name: POSTGRES_DB
          value: {{ .Values.postgresSidecar.database | quote }}
        - name: POSTGRES_USER
          value: {{ .Values.postgresSidecar.username | quote }}
        - name: POSTGRES_PASSWORD
          value: {{ .Values.postgresSidecar.password | quote }}
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        {{- with .Values.postgresSidecar.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.securityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- if .Values.postgresSidecar.healthCheck.enabled }}
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U "{{ .Values.postgresSidecar.username }}" -d "{{ .Values.postgresSidecar.database }}" -h 127.0.0.1 -p {{ .Values.postgresSidecar.port }}
          initialDelaySeconds: {{ .Values.postgresSidecar.healthCheck.initialDelaySeconds }}
          periodSeconds: {{ .Values.postgresSidecar.healthCheck.periodSeconds }}
          timeoutSeconds: {{ .Values.postgresSidecar.healthCheck.timeoutSeconds }}
          failureThreshold: {{ .Values.postgresSidecar.healthCheck.failureThreshold }}
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U "{{ .Values.postgresSidecar.username }}" -d "{{ .Values.postgresSidecar.database }}" -h 127.0.0.1 -p {{ .Values.postgresSidecar.port }}
          initialDelaySeconds: {{ .Values.postgresSidecar.healthCheck.initialDelaySeconds }}
          periodSeconds: {{ .Values.postgresSidecar.healthCheck.periodSeconds }}
          timeoutSeconds: {{ .Values.postgresSidecar.healthCheck.timeoutSeconds }}
          failureThreshold: {{ .Values.postgresSidecar.healthCheck.failureThreshold }}
        {{- end }}

      volumes:
      - name: postgres-data
        {{- if .Values.postgresSidecar.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.postgresSidecar.name }}-pvc
        {{- else }}
        emptyDir: {}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}