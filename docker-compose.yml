services:
  postgres-user:
    image: postgres:14
    environment:
      POSTGRES_DB: users-db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    ports:
      - "5432:5432"
    volumes:
      - postgres-user-data:/var/lib/postgresql/data

  postgres-product:
    image: postgres:14
    environment:
      POSTGRES_DB: products-db
      POSTGRES_USER: product_user
      POSTGRES_PASSWORD: product_pass
    ports:
      - "5433:5432"
    volumes:
      - postgres-product-data:/var/lib/postgresql/data

  postgres-order:
    image: postgres:14
    environment:
      POSTGRES_DB: orders-db
      POSTGRES_USER: order_user
      POSTGRES_PASSWORD: order_pass
    ports:
      - "5434:5432"
    volumes:
      - postgres-order-data:/var/lib/postgresql/data

  postgres-notification:
    image: postgres:14
    environment:
      POSTGRES_DB: notifications-db
      POSTGRES_USER: notification_user
      POSTGRES_PASSWORD: notification_pass
    ports:
      - "5435:5432"
    volumes:
      - postgres-notification-data:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  gateway-service:
    build: ./microservices/gateway-service
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_CLOUD_COMPATIBILITY_VERIFIER_ENABLED: false
    depends_on:
      - user-service
      - product-service
      - order-service
      - notification-service

  user-service:
    build: ./microservices/user-service
    ports:
      - "8081:8081"
    depends_on:
      - postgres-user
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SERVER_PORT: 8081
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-user:5432/users-db
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: pass

  product-service:
    build: ./microservices/product-service
    ports:
      - "8082:8082"
    depends_on:
      - postgres-product
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SERVER_PORT: 8082
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-product:5432/products-db
      SPRING_DATASOURCE_USERNAME: product_user
      SPRING_DATASOURCE_PASSWORD: product_pass

  order-service:
    build: ./microservices/order-service
    ports:
      - "8083:8083"
    depends_on:
      - postgres-order
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SERVER_PORT: 8083
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-order:5432/orders-db
      SPRING_DATASOURCE_USERNAME: order_user
      SPRING_DATASOURCE_PASSWORD: order_pass

  notification-service:
    build: ./microservices/notification-service
    ports:
      - "8084:8084"
    depends_on:
      - postgres-notification
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SERVER_PORT: 8084
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-notification:5432/notifications-db
      SPRING_DATASOURCE_USERNAME: notification_user
      SPRING_DATASOURCE_PASSWORD: notification_pass

  # contract-test-generator:
  #   build: ./microservice-testing-lab/shared-utils/contract-test-generator
  #   ports:
  #     - "8085:8085"
  #   environment:
  #     SPRING_PROFILES_ACTIVE: docker
  #     SERVER_PORT: 8085
  #   volumes:
  #     - ./generated-contracts:/app/generated-contracts

volumes:
  postgres-user-data:
  postgres-product-data:
  postgres-order-data:
  postgres-notification-data:
